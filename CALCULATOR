<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Basic Calculator</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="calculator">
        <div id="display">0</div>
        <div class="buttons">
            <button class="btn" data-value="7">7</button>
            <button class="btn" data-value="8">8</button>
            <button class="btn" data-value="9">9</button>
            <button class="btn operator" data-value="/">/</button>
            <button class="btn" data-value="4">4</button>
            <button class="btn" data-value="5">5</button>
            <button class="btn" data-value="6">6</button>
            <button class="btn operator" data-value="*">*</button>
            <button class="btn" data-value="1">1</button>
            <button class="btn" data-value="2">2</button>
            <button class="btn" data-value="3">3</button>
            <button class="btn operator" data-value="-">-</button>
            <button class="btn" data-value="0">0</button>
            <button class="btn" data-value=".">.</button>
            <button class="btn operator" data-value="+">+</button>
            <button class="btn" id="equals">=</button>
            <button class="btn" id="clear">C</button>
        </div>
    </div>
    <script src="calci.js"></script>
</body>
</html>


CSS

/* styles.css */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f0f0f0;
    margin: 0;
    font-family: Arial, sans-serif;
}

.calculator {
    width: 300px;
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

#display {
    font-size: 2em;
    background-color: #222;
    color: #fff;
    text-align: right;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 20px;
    height: 50px;
    overflow: hidden;
}

.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

.btn {
    padding: 20px;
    font-size: 1.5em;
    border: none;
    background-color: #ddd;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.btn:hover {
    background-color: #ccc;
}

.operator {
    background-color: #f9a825;
    color: #fff;
}

.operator:hover {
    background-color: #f57f17;
}

#equals {
    grid-column: span 2;
    background-color: #4caf50;
    color: #fff;
}

#equals:hover {
    background-color: #388e3c;
}

#clear {
    grid-column: span 2;
    background-color: #f44336;
    color: #fff;
}

#clear:hover {
    background-color: #d32f2f;
}


JS
document.addEventListener('DOMContentLoaded', function() {
    const display = document.getElementById('display');
    const buttons = document.querySelectorAll('.btn');
    const clearButton = document.getElementById('clear');
    const equalsButton = document.getElementById('equals');

    let currentInput = '0';
    let previousInput = '';
    let operator = null;

    buttons.forEach(button => {
        button.addEventListener('click', function() {
            const value = button.getAttribute('data-value');

            if (button.classList.contains('operator')) {
                if (operator && currentInput) {
                    previousInput = calculate(parseFloat(previousInput), parseFloat(currentInput), operator);
                    display.innerText = previousInput;
                    currentInput = '';
                } else {
                    previousInput = currentInput;
                    currentInput = '';
                }
                operator = value;
            } else if (value === '.') {
                if (!currentInput.includes('.')) {
                    currentInput += value;
                }
            } else {
                if (currentInput === '0') {
                    currentInput = value;
                } else {
                    currentInput += value;
                }
            }
            display.innerText = currentInput || previousInput;
        });
    });

    clearButton.addEventListener('click', function() {
        currentInput = '0';
        previousInput = '';
        operator = null;
        display.innerText = '0';
    });

    equalsButton.addEventListener('click', function() {
        if (currentInput !== '' && previousInput !== '' && operator !== null) {
            currentInput = calculate(parseFloat(previousInput), parseFloat(currentInput), operator).toString();
            display.innerText = currentInput;
            previousInput = '';
            operator = null;
        }
    });

    function calculate(a, b, operator) {
        switch (operator) {
            case '+':
                return a + b;
            case '-':
                return a - b;
            case '*':
                return a * b;
            case '/':
                return a / b;
            default:
                return 0;
        }
    }
});

